{"version":3,"sources":["components/Counter.js","components/Navbar.js","components/reducers/cartReducer.js","components/actions/action-types/cart-actions.js","store.js","components/Home.js","components/actions/cartActions.js","components/Recipe.js","components/Cart.js","App.js","index.js"],"names":["Counter","react_default","a","createElement","class","this","props","addedItems","length","Component","connect","state","Navbar","className","Link","to","components_Counter","initState","items","isFetching","isError","total","cartReducer","arguments","undefined","action","type","Object","objectSpread","data","addedItem","find","item","id","quantity","price","newTotal","toConsumableArray","concat","itemToRemove","new_items","filter","console","log","store","createStore","applyMiddleware","thunk","Home","handleClick","_this","addToCart","fetch_cart_list_from_api","_this2","itemList","map","key","src","img_url","alt","name","onClick","category","dispatch","getState","fetch","then","json","message","Error","catch","err","Recipe","handleChecked","e","target","checked","addShipping","substractShipping","refs","shipping","ref","onChange","Cart","handleRemove","removeItem","handleAddQuantity","addQuantity","handleSubtractQuantity","subtractQuantity","components_Recipe","App","BrowserRouter","components_Navbar","Switch","Route","exact","path","component","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8d104f60.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n//import { addShipping } from './actions/cartActions'\r\nclass Counter extends Component{\r\n    \r\n   \r\n\r\n    render(){\r\n  \r\n        return(\r\n            <span class=\"badge\">{this.props.addedItems.length}</span>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.addedItems,\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Counter)\r\n","import React from 'react';\r\nimport Counter from './Counter'\r\nimport { Link } from 'react-router-dom'\r\n const Navbar = ()=>{\r\n  \r\n    return(\r\n            <nav className=\"nav-wrapper blue accent-4\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"brand-logo\">Shopping</Link>\r\n                    \r\n                    <ul className=\"right hide-on-med-and-down\">\r\n                       \r\n                        \r\n                        <li><Link to=\"/cart\" className=\"notification\">\r\n                          \r\n                            <i className=\"material-icons\">shopping_cart</i>\r\n                            <Counter></Counter>\r\n                             \r\n                         \r\n                            </Link></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n   \r\n        \r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nimport { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY,ADD_SHIPPING,FETCH_CART_LIST,FETCH_CART_LIST_SUCCESS,FETCH_CART_LIST_FAILURE } from '../actions/action-types/cart-actions'\r\n\r\n\r\nconst initState = {\r\n\r\n    items:[],\r\n    isFetching: false,\r\n    isError: false,\r\n    addedItems:[],\r\n    total: 0\r\n\r\n}\r\nconst cartReducer= (state = initState,action)=>{\r\n\r\n    if(action.type === FETCH_CART_LIST){\r\n      return  {\r\n          ...state,\r\n        isFetching: true,\r\n        items: [],\r\n        isError: false\r\n      }\r\n    }\r\n\r\n    if(action.type === FETCH_CART_LIST_SUCCESS){\r\n      return  {\r\n          ...state,\r\n        items: action.data,\r\n        isFetching: false,\r\n        isError: false\r\n      }\r\n    }\r\n\r\n    if(action.type === FETCH_CART_LIST_FAILURE){\r\n      return  {\r\n          ...state,\r\n        isError: true,\r\n        isFetching: false\r\n      }\r\n    }\r\n   \r\n    //INSIDE HOME COMPONENT\r\n    if(action.type === ADD_TO_CART){\r\n          let addedItem = state.items.find(item=> item.id === action.id)\r\n          //check if the action id exists in the addedItems\r\n         let existed_item= state.addedItems.find(item=> action.id === item.id)\r\n         if(existed_item)\r\n         {\r\n            addedItem.quantity += 1 \r\n             return{\r\n                ...state,\r\n                 total: state.total + addedItem.price \r\n                  }\r\n        }\r\n         else{\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price \r\n            \r\n            return{\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n        \r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\r\n        console.log(itemToRemove)\r\n        return{\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n    //INSIDE CART COMPONENT\r\n    if(action.type=== ADD_QUANTITY){\r\n        let addedItem = state.items.find(item=> item.id === action.id)\r\n          addedItem.quantity += 1 \r\n          let newTotal = state.total + addedItem.price\r\n          return{\r\n              ...state,\r\n              total: newTotal\r\n          }\r\n    }\r\n    if(action.type=== SUB_QUANTITY){  \r\n        let addedItem = state.items.find(item=> item.id === action.id) \r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        }\r\n        else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    if(action.type=== ADD_SHIPPING){\r\n          return{\r\n              ...state,\r\n              total: state.total + 6\r\n          }\r\n    }\r\n\r\n    if(action.type=== 'SUB_SHIPPING'){\r\n        return{\r\n            ...state,\r\n            total: state.total - 6\r\n        }\r\n  }\r\n    \r\n  else{\r\n    return state\r\n    }\r\n    \r\n}\r\n\r\nexport default cartReducer\r\n","\r\n//Types should be in const to avoid typos and duplication since it's a string and could be easily miss spelled\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\r\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\r\nexport const ADD_SHIPPING = 'ADD_SHIPPING';\r\nexport const FETCH_CART_LIST = 'FETCH_CART_LIST';\r\nexport const FETCH_CART_LIST_SUCCESS = 'FETCH_CART_LIST_SUCCESS';\r\nexport const FETCH_CART_LIST_FAILURE = 'FETCH_CART_LIST_FAILURE';\r\n","import { createStore, applyMiddleware } from \"redux\";\nimport cartReducer from './components/reducers/cartReducer';\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(cartReducer, applyMiddleware(thunk));\n\nexport default store;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { addToCart,fetch_cart_list_from_api } from './actions/cartActions'\r\n\r\n class Home extends Component{\r\n    \r\n    handleClick = (id)=>{\r\n        this.props.addToCart(id); \r\n    }\r\n    componentDidMount() {\r\n        this.props.fetch_cart_list_from_api();\r\n    }\r\n  \r\n    render(){\r\n        console.log(this.props.items);\r\n        let itemList = this.props.items && this.props.items.map(item=>{\r\n            return(\r\n                <div className=\"card\" key={item.id}>\r\n                        <div className=\"card-image\">\r\n                            <img src={item.img_url} alt={item.name}/>\r\n                            <span className=\"card-title\">{item.name}</span>\r\n                            <span to=\"/\" className=\"btn-floating halfway-fab waves-effect waves-light red\" onClick={()=>{this.handleClick(item.id)}}><i className=\"material-icons\">add</i></span>\r\n                        </div>\r\n\r\n                        <div className=\"card-content\">\r\n                            <p>{item.category}</p>\r\n                            <p><b>Price: {item.price}$</b></p>\r\n                        </div>\r\n                 </div>\r\n\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <h3 className=\"center\">Our items</h3>\r\n                <div className=\"box\">\r\n                    {itemList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n      items: state.items\r\n    }\r\n  }\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    \r\n    return{\r\n        addToCart: (id)=>{dispatch(addToCart(id))},\r\n        fetch_cart_list_from_api: ()=>{dispatch(fetch_cart_list_from_api())},\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)","\r\nimport { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY,ADD_SHIPPING,FETCH_CART_LIST,FETCH_CART_LIST_SUCCESS,FETCH_CART_LIST_FAILURE} from './action-types/cart-actions'\r\nimport store from \"../../store\";\r\n\r\n//add cart action\r\nexport const addToCart= (id)=>{\r\n    return{\r\n        type: ADD_TO_CART,\r\n        id\r\n    }\r\n}\r\n//remove item action\r\nexport const removeItem=(id)=>{\r\n    return{\r\n        type: REMOVE_ITEM,\r\n        id\r\n    }\r\n}\r\n//subtract qt action\r\nexport const subtractQuantity=(id)=>{\r\n    return{\r\n        type: SUB_QUANTITY,\r\n        id\r\n    }\r\n}\r\n//add qt action\r\nexport const addQuantity=(id)=>{\r\n    return{\r\n        type: ADD_QUANTITY,\r\n        id\r\n    }\r\n}\r\n\r\n\r\nexport const fetch_cart = () => {\r\n    return {\r\n      type: FETCH_CART_LIST\r\n    };\r\n  };\r\n  \r\n  export const fetch_cart_success = post => {\r\n    return {\r\n      type: FETCH_CART_LIST_SUCCESS,\r\n      data: post\r\n    };\r\n  };\r\n  \r\n  export const fetch_cart_error = () => {\r\n    return {\r\n      type: FETCH_CART_LIST_FAILURE\r\n    };\r\n  };\r\n  \r\n  export const fetch_cart_list_from_api = username => {\r\n    \r\n    store.dispatch(fetch_cart());\r\n    return function(dispatch, getState) {\r\n      return fetch(`https://api.myjson.com/bins/qzuzi`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n          if (data.message === \"Not Found\") {\r\n            throw new Error(\"No cart list found!!\");\r\n          } else dispatch(fetch_cart_success(data));\r\n        })\r\n        .catch(err => dispatch(fetch_cart_error()));\r\n    };\r\n  };","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n//import { addShipping } from './actions/cartActions'\r\nclass Recipe extends Component{\r\n    \r\n    componentWillUnmount() {\r\n         if(this.refs.shipping.checked)\r\n              this.props.substractShipping()\r\n    }\r\n\r\n    handleChecked = (e)=>{\r\n        if(e.target.checked){\r\n            this.props.addShipping();\r\n        }\r\n        else{\r\n            this.props.substractShipping();\r\n        }\r\n    }\r\n\r\n    render(){\r\n  \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"collection\">\r\n                    <li className=\"collection-item\">\r\n                            <label>\r\n                                <input type=\"checkbox\" ref=\"shipping\" onChange= {this.handleChecked} />\r\n                                <span>Shipping(+6$)</span>\r\n                            </label>\r\n                        </li>\r\n                        <li className=\"collection-item\"><b>Total: {this.props.total} $</b></li>\r\n                    </div>\r\n                    <div className=\"checkout\">\r\n                        <button className=\"waves-effect waves-light btn\">Checkout</button>\r\n                    </div>\r\n                 </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.addedItems,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        addShipping: ()=>{dispatch({type: 'ADD_SHIPPING'})},\r\n        substractShipping: ()=>{dispatch({type: 'SUB_SHIPPING'})}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Recipe)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { removeItem,addQuantity,subtractQuantity} from './actions/cartActions'\r\nimport Recipe from './Recipe'\r\nclass Cart extends Component{\r\n\r\n    //to remove the item completely\r\n    handleRemove = (id)=>{\r\n        this.props.removeItem(id);\r\n    }\r\n    //to add the quantity\r\n    handleAddQuantity = (id)=>{\r\n        this.props.addQuantity(id);\r\n    }\r\n    //to substruct from the quantity\r\n    handleSubtractQuantity = (id)=>{\r\n        this.props.subtractQuantity(id);\r\n    }\r\n    render(){\r\n              \r\n        let addedItems = this.props.items.length ?\r\n            (  \r\n                this.props.items.map(item=>{\r\n                    return(\r\n                       \r\n                        <li className=\"collection-item avatar\" key={item.id}>\r\n                                    <div className=\"item-img\"> \r\n                                        <img src={item.img_url} alt={item.img_url} className=\"\"/>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"item-desc\">\r\n                                        <span className=\"title\">{item.name}</span>\r\n                                        <p>{item.category}</p>\r\n                                        <p><b>Price: {item.price}$</b></p> \r\n                                        <p>\r\n                                            <b>Quantity: {item.quantity}</b> \r\n                                        </p>\r\n                                        <div className=\"add-remove\">\r\n                                            <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{this.handleAddQuantity(item.id)}}>arrow_drop_up</i></Link>\r\n                                            <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{this.handleSubtractQuantity(item.id)}}>arrow_drop_down</i></Link>\r\n                                        </div>\r\n                                        <button className=\"waves-effect waves-light btn pink remove\" onClick={()=>{this.handleRemove(item.id)}}>Remove</button>\r\n                                    </div>\r\n                                    \r\n                                </li>\r\n                         \r\n                    )\r\n                })\r\n            ):\r\n\r\n             (\r\n                <p>Nothing.</p>\r\n             )\r\n       return(\r\n            <div className=\"container\">\r\n                <div className=\"cart\">\r\n                    <h5>You have ordered:</h5>\r\n                    <ul className=\"collection\">\r\n                        {addedItems}\r\n                    </ul>\r\n                </div> \r\n                <Recipe />          \r\n            </div>\r\n       )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.addedItems,\r\n        //addedItems: state.addedItems\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        removeItem: (id)=>{dispatch(removeItem(id))},\r\n        addQuantity: (id)=>{dispatch(addQuantity(id))},\r\n        subtractQuantity: (id)=>{dispatch(subtractQuantity(id))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cart)","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport Cart from './components/Cart'\n\nclass App extends Component {\n  render() {\n    return (\n       <BrowserRouter>\n            <div className=\"App\">\n            \n              <Navbar/>\n                <Switch>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route path=\"/cart\" component={Cart}/>\n                  </Switch>\n             </div>\n       </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport store from \"./store\";\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}